stages:
  - build
  - test
  - docs
  - quality

build_job:
  stage: build
  image: node
  script: 
    - npm install
    - CI=true npm run build
  # Why use artificats and not cache to share
  # build and node_modules across jobs ?
  # See [GitLab | Cache vs artifacts](https://docs.gitlab.com/ee/ci/caching/#cache-vs-artifacts)
  artifacts:
    expire_in: 1 hour
    paths:
      - build
      - node_modules/

test_job:
  stage: test
  image: node
  script:
    # CI=true: run tests once and finish the process
    # (i.e. stop default interactive CLI after a test run)
    # See [Create React App | Running Tests](https://create-react-app.dev/docs/running-tests/#continuous-integration)
    - CI=true npm test -- --coverage --testResultsProcessor jest-sonar-reporter
    # --testResultsProcessor jest-sonar-reporter: to create `test-reporter.xml` for SonarCloud
  artifacts:
    paths:
      - coverage
      - reports

docs_job:
  stage: docs
  image: node
  script:
    - npm run docs
  artifacts:
    paths:
      - docs

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  
quality_job:
  stage: quality
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
